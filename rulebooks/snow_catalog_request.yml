---
- name: Respond to ServiceNow catalog request items
  hosts: all
  execution_strategy: parallel
  sources:
    - name: Watch for any updated table
      servicenow.itsm.records:
        table: sc_task
        interval: 5
        query:
          # add a small overlap + ordering to avoid misses
          sysparm_query: "sys_updated_onONLast 10 minutes^ORDERBYsys_updated_on"
          sysparm_fields: "sys_id,number,short_description,sys_created_on,sys_updated_on,state"
          sysparm_limit: 50
  rules:
    - name: Output ServiceNow Information
      condition: event.meta is defined
      action:
        debug:
          var: event

    # - name: Enrich new REQ received from Service Catalog
    #   condition: event.payload.sys_class_name == "sc_request" and event.payload.sys_mod_count == "0"
    #   action:
    #     run_job_template:
    #       name: "EDA Enrich ServiceNow REQ"
    #       organization: Infrastructure
    #       post_events: true
    #       job_args:
    #         extra_vars:
    #           req_sys_id: "{{ event.payload.sys_id }}"
    #           req_number: "{{ event.payload.number }}"

    # - name: New Multi Provision VM Request
    #   condition: event.enriched_event.ritm_details is selectattr('cat_item.display_value', '==', "AAP EDA Multi Provision w/ Citrix")
    #   action:
    #     run_workflow_template:
    #       name: "EDA Multi Hypervisor Create and Config VM, Deploy Web App with Failure Paths Citrix"
    #       organization: "Infrastructure"
    #       job_args:
    #         extra_vars:
    #           vm_name: "{{ event.enriched_event.ritm_details[0].variables | selectattr('name', 'equalto', 'vm_name') | map(attribute='value') | join(',') }}"
    #           owner: "{{ event.user }}"
    #           env: "{{ event.enriched_event.ritm_details[0].variables | selectattr('name', 'equalto', 'env') | map(attribute='value') | join(',') }}"
    #           ticket_number: "{{ event.original_event }}"

